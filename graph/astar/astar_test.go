package astar

import (
	"log"
	"testing"
)

func TestMaxDim(t *testing.T) {
	Dim := 2 << 11
	log.Println(Dim)
	graph := New(Dim, Dim)
	// graph.isDebug = true

	graph.SetTarget(0, 0, Dim-1, Dim-1)
	t.Error(len(graph.Search()) - 1)
}

func TestNoPath(t *testing.T) {
	graph := New(32, 32)
	graph.isDebug = true
	graph.SetStringTiles(`
	e...............................
	xxxx.......xxxxxxxxxxxxxxxxxxxxx
	...x.......x................x...
	...x.......x.xxxxxxxxxxxxxxxx...
	...x.......x....................
	...xxx.....xxxxxxxxxxxxxxxxxxxx.
	.....xx....x....................
	......xx...x..xxxxxxxxxxxxxxxxxx
	.......xx..x....................
	........xx.x....................
	.........xxxxxxxxxxxxxxxxxxxxx..
	..........xx....................
	...........xx..xxxxxxxxxxxxxxxxx
	............xx..................
	.............xxxxxxxxxxxxxxxxxx.
	..............xx................
	...............xx...............
	................xx..............
	.................xx.............
	..................xx............
	.xxxxxxxxxxxxxxxxxxxx...........
	....................xx..........
	.....................xx.........
	xxxxxxxxxxxxxxxxxx....xx........
	.......................xx.......
	.xxxxxxxxxxxxxxxxxxxxxxxxx......
	.........................xx.....
	xxxxxxxxxxxxxxxxxx........xx....
	...........................xx...
	............................xx..
	.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.
	...............................s
	`)
	graph.Search()
}

func TestSearch8Dir(t *testing.T) {
	graph := New(32, 32)
	graph.SetNeighborFunc(GetNeighbor8)
	graph.isDebug = true
	graph.SetStringTiles(`
	e...............................
	xxxx.......xxxxxxxxxxxxxxxx.xxxx
	...x.......x................x...
	...x.......x.xxxxxxxxxxxxxxxx...
	...x.......x....................
	...xxx.....xxxxxxxxxxxxxxxxxxxx.
	.....xx....x....................
	......xx...x..xxxxxxxxxxxxxxxxxx
	.......xx..x....................
	........xx.x....................
	.........xxxxxxxxxxxxxxxxxxxxx..
	..........xx....................
	...........xx..xxxxxxxxxxxxxxxxx
	............xx..................
	.............xxxxxxxxxxxxxxxxxx.
	..............xx................
	...............xx...............
	................xx..............
	.................xx.............
	..................xx............
	.xxxxxxxxxxxxxxxxxxxx...........
	....................xx..........
	.....................xx.........
	xxxxxxxxxxxxxxxxxx....xx........
	.......................xx.......
	.xxxxxxxxxxxxxxxxxxxxxxxxx......
	.........................xx.....
	xxxxxxxxxxxxxxxxxx........xx....
	...........................xx...
	............................xx..
	.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.
	...............................s
	`)
	graph.Search()
}

func TestSearch4Dir(t *testing.T) {
	graph := New(32, 32)
	graph.isDebug = true
	graph.SetStringTiles(`
	e...............................
	xxxx.......xxxxxxxxxxxxxxxx.xxxx
	...x.......x................x...
	...x.......x.xxxxxxxxxxxxxxxx...
	...x.......x....................
	...xxx.....xxxxxxxxxxxxxxxxxxxx.
	.....xx....x....................
	......xx...x..xxxxxxxxxxxxxxxxxx
	.......xx..x....................
	........xx.x....................
	.........xxxxxxxxxxxxxxxxxxxxx..
	..........xx....................
	...........xx..xxxxxxxxxxxxxxxxx
	............xx..................
	.............xxxxxxxxxxxxxxxxxx.
	..............xx................
	...............xx...............
	................xx..............
	.................xx.............
	..................xx............
	.xxxxxxxxxxxxxxxxxxxx...........
	....................xx..........
	.....................xx.........
	xxxxxxxxxxxxxxxxxx....xx........
	.......................xx.......
	.xxxxxxxxxxxxxxxxxxxxxxxxx......
	.........................xx.....
	xxxxxxxxxxxxxxxxxx........xx....
	...........................xx...
	............................xx..
	.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.
	...............................s
	`)
	graph.Search()
}
